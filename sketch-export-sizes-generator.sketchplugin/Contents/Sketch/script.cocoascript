var SIZES = []; // e.g. [16, 32, 128, 256, 512]
var SCALES = [1, 2];


function prompt() {
  var informativeText = 'Comma separated integers.\ne.g. 16, 32, 128, 256, 512'
  var alert = [NSAlert alertWithMessageText:'Enter sizes'
                              defaultButton:'OK'
                            alternateButton:'Cancel'
                                otherButton:nil
                  informativeTextWithFormat:informativeText];

  var textField = [[NSTextField alloc] initWithFrame:NSMakeRect(0, 0, 200, 24)];
  textField.stringValue = '16, 32, 128, 256, 512';
  alert.setAccessoryView(textField);

  var button = alert.runModal();
  if (button == NSAlertDefaultReturn) {
    SIZES = textField.stringValue().split(/,\s*/).map(function (str) {
      return parseInt(str);
    });
  }
}


function prepareExportSizes(layer) {
  log('=== ' + layer.name() + ' ===');
  log('Remove all export sizes of layer \'' + layer.name() + '\'.');
  var sizes = layer.exportOptions().sizes();
  sizes.removeAllObjects();

  for (size of SIZES) {
    for (scale of SCALES) {
      var height = Math.floor(size * scale);
      var suffix = '_' + size + 'x' + size;
      if (scale > 1) {
        suffix += '@' + scale + 'x';
      }
      addExportSize(layer, height, suffix);
    }
  }

  // add and remove a new export size to refresh UI
  layer.exportOptions().addExportSize();
  sizes.removeObjectAtIndex(sizes.count() - 1));
}


function addExportSize(layer, height, suffix, format) {
  if (!format) {
    format = 'PNG';
  }

  log('Add \'' + layer.name() + suffix + '\' (' + height + 'h' + ')');

  var size = layer.exportOptions().addExportSize();
  size.setFormat(format);
  size.setName(suffix);
  size.setScale(height / layer.frame().size().height);
  size.setVisibleScaleType(2); // e.g. 512h
}

var onRun = function(context) {
  var selectedLayers = context.selection;
  var selectedCount = selectedLayers.count();

  if (selectedCount == 0) {
    log('No layers are selected.');
    return;
  }

  prompt();

  if (SIZES.length == 0) {
    log('No valid sizes.');
    return;
  }

  for (var i = 0; i < selectedCount; i++) {
    var layer = selectedLayers[i];
    if (i != 0) {
      log('');
    }
    prepareExportSizes(layer);
  }

  log('\nDone.');
};
